<?xml version="1.0" encoding="utf-8"?>
<Sr2XmlDocManifest>
  <README>
    <Head>
# Juno: New Origins XML Reference

The big difference between SP and JNO XML modding is that you can add new modifiers to things as you like. For instance, a landing leg might not have an `InputBasedActivator` on it by default, but you can just add one.

If you find, or think you have found, any inaccuracies or omissions, do not be afraid to ask, or submit a PR.

To those interested in contributing, all changes should be made to `manifest.xml`, and then the site can be re-generated with [this](https://github.com/WNP78/ModifierPropertiesExtractor) program. If you can't run this, just submit a PR with your modifications to manifest.xml and I can merge it and re-build the site.
If you would like to contact me, I am WNP78#2849 on discord or WNP78 on [simplerockets.com](https://www.simplerockets.com/u/WNP78). Details on how the `manfiest.xml` file is laid out are [here](ManifestXmlGuide).
        </Head>
  </README>
  <PartModifierScriptProperties>
    <Head>
      # PartModifier Properties
These can all be used when referencing a part modifier by `id` in an InputController.
They are displayed in the format of: `PartModifierId.Property`. In actual use, you could call the modifier anything you like. For instance, you could, on your fuel tank, set up:
```xml
&lt;FuelTank id="MainFuelTank" /&gt;
```
then, in an `InputController`, use:
```xml
&lt;InputController input="MainFuelTank.IsEmpty" /&gt;
```
Below is a table of all the different properties you can access, per modifier.
    </Head>
  </PartModifierScriptProperties>
  <InputController childPages="PartModifierScriptProperties">
    <Head>
# InputController
An `InputController` takes an input value, chosen by it's `input` property, then applies a set of transformations to it, mapping it to the final range of `min` to `max`, optionally inverting it. Other modifiers then use the `InputController`'s output value as their input.
    </Head>
    <Footer>
## Option Values

|InputControllerType|Description (from in-game tooltip)|
|---|---|
|`Standard`|A positive axis will be multiplied by the max value. A negative axis will be multiplied by the min value. |
|`LerpFullAxis`|The output value will be linearly interpolated between the min and max values assuming an input axis of -1 to 1. |
|`LerpPositiveAxis`|The output value will be linearly interpolated between the min and max values assuming an input axis of 0 to 1. |
|`LerpNegativeAxis`|The output value will be linearly interpolated between the min and max values assuming an input axis of -1 to 0.|

## Input Axes
There are many things you can put in the `input` field. It's rather quite exciting. For a start, you can access anything in this list. Note that you can also use `FD` as a shorthand for `FlightData` and `OD` as a shorthand for `OrbitData`.

{{INPUTS}}

You can also access activation group states with `AG1` to `AG10`. If you want to, you can just put a constant value in there. Like `0.5`, `-1`, or even `.3`. This will just remain constant. Additionally you can reference `pi`, `e`, `true` or `false` to get their respective values.

When working with Funk in Vizzy you can reference variables from the program just by typing their name, having to add `v:` if they are a vector, and although Funk doesn't have any string operators, if you want it to output strings you have to enclose them with "".

And you can even use some operators and functions:

|Operators and Functions|
|---|
|Mathematical Operators|`+`, `-`, `*`, `/` (standard mathematical operations).|
|`%`|Modulus - this will return a negative value if the first operand is negative - if you want the result to be always positive then use `repeat` (see below).|
|Comparison|`&lt;`, `&gt;`, `&lt;=`, `&gt;=`, `=`, `!=` |
|`Boolean`|`&amp;`, `|`, `!`, Ternary operator: `(condition ? value_if_true : value_if_false)` |
|`abs(x)`|The absolute (positive) value of x. |
|`ceil(x)`|x rounded up to an integer. |
|`clamp(x, min, max)`|x clamped between min and max. |
|`clamp01(x)`|Equivalent to clamp(x, 0, 1). |
|`deltaangle(a, b)`|The shortest angle delta between angles a and b in degrees. |
|`exp(x)`|Returns e raised to the power of x. |
|`floor(x)`|x rounded down to an integer. |
|`inverselerp(a, b, x)`|Calculates the linear parameter t that produces the interpolant value within the range [a, b]. |
|`lerp(a, b, t)`|Linearly interpolates between a and b, by a proportion of t. |
|`lerpangle(a, b, t)`|Similar to lerp, but interpolates correctly when values pass 360 degrees. |
|`lerpunclamped(a, b, t)`|Similar to lerp, but doesn't clamp the value between a and b. |
|`log(x, p)`|The logarithm of x in base p. |
|`log10(x)`|Equivalent to log(x, 10). |
|`pingpong(x, l)`|"Ping-pongs" the value x so it is never larger than l and never less than 0. |
|`max(a, b)`|The largest value between a and b. |
|`min(a, b)`|The smallest value between a and b. |
|`pow(x, p)`|x raised to the power of p. |
|`repeat(x, l)`|Loops the value x so it is never larger than l and never less than 0. Effectively equivalent to a modulus function, always returns a positive result.|
|`round(x)`|Rounds x to the nearest integer. |
|`sign(x)`|The sign of x (1 if x positive, -1 if x negative) |
|`smoothstep(a, b, t)`|Similar to lerp, but with smoothing at the ends. |
|`sqrt(x)`|The square root of x. |
|`sin(x)`|The sine of x (radians) |
|`cos(x)`|The cosine of x (radians) |
|`tan(x)`|The tangent of x (radians) |
|`asin(x)`|The arc-sine of x (radians) |
|`acos(x)`|The arc-cosine of x (radians) |
|`atan(x)`|The arc-tangent of x (radians) |

|Vector Operators and Functions|
|---|
|`angle(Vector from, Vector to)`|The difference in angle between two vectors (radians) |
|`clampMagnitude(Vector vector, Number maxLength)`|A vector pointing in the same direction but with the indicated magnitude |
|`cross(Vector lhs, Vector rhs)`|The cross product of two vectors |
|`distance(Vector a, Vector b)`|The distance between the positions pointed at by two vectors |
|`dot(Vector lhs, Vector rhs)`|The dot product of two vectors |
|`exclude(Vector excludeThis, Vector fromThat)`|A vector with the components in the direction of fromThat removed, similar to projectOnPlane |
|`isNaN(Vector v)`|Checks if a vector is NaN |
|`lerp3(Vector from, Vector to, Number t)`|A linear interpolation between two vectors by the amount t |
|`magnitude(Vector vector)`|The length of a vector |
|`max3(Vector a, Vector b)`|A vector formed by the max components between the input vectors |
|`min3(Vector a, Vector b)`|A vector formed by the min components between the input vectors |
|`moveTowards(Vector current, Vector target, Number maxDistanceDelta)`|A vector interpolation limited by a maximum distance delta |
|`normalize(Vector vector)`|A vector with the same direction but with a magnitude of 1 |
|`project(Vector vector, Vector onNormal)`|A vector in the direction of onNormal with the length of the projection of the vector onto it |
|`projectOnPlane(Vector vector, Vector planeNormal)`|The projection of a vector onto a plane defined by its normal, similar to exclude |
|`reflect(Vector inDirection, Vector inNormal)`|A mirrored vector of inDirection relative to inNormal |
|`scale(Vector a, Vector b)`|The component-wise multiplication of a and b |
|`signedAngle(Vector from, Vector to, Vector axis)`|The signed angle in radians between two vectors rotated around an axis |
|`slerp(Vector from, Vector to, Number t)`|A smooth interpolation between two vectors by the amount t |
|`sqrMagnitude(Vector vector)`|The square root of the length of the vector |
|`vec(x,y,z)`|Constructs a vector from three scalars |    
|`x(Vector)`|The X component of the vector |
|`y(Vector)`|The Y component of the vector |
|`z(Vector)`|The Z component of the vector |

How awesome! Then it gets even more complex. You can get parameters from different parts in the crafts using the following format (note that the elements surrounded by {} are optional):

	`{PartSelector}.ModifierSelector{.Data}.PropertySelector`

	`{PartSelector}`
	 - May be omitted to select the current part
	 - May be '*' for legacy style of searching entire craft for a modifier id (specified by modifier selector)
	 - May be '$' followed by an integer to reference a part by its part id
	 - Matches part based on exact part name. Names can't start by a number or include spaces
	    - In order to support spaces brackets must be added encasing the entire string, from '[PartSelector' to 'PropertySelector]'
	 - If the part belongs to a group, the connected group parts will be evaluated first

	`.ModifierSelector`
	 - Required
	 - First tries to match a modifier based on the modifier's 'id' property.
	 - If no match is found, it tries to match based on the modifier's type id (InputController, Piston, Gyroscope, etc)

	`{.Data}`
	 - If specified, it will match the part modifier data object
	 - If omitted, it will match the part modifier's script

	`.PropertySelector`
	 - Required
	 - Matches the name of a public float/double/bool/Vector3d property on the target object.

An example of the usefulness of this technique is the retrieval of Variables from Vizzy programs by using `FlightProgram` (or `VZ` for short) for the Modifier Selector, followed by the name of the variable. If the variable is a vector the prefix `v:` will be required. If it is a list, Funk includes a couple retrievers that work only within Vizzy: `listNum`, `listVec`, `listBool` and `listStr` take as parameters a string with the name of the list and the index of the value to be retrieved, and `listLen`, which takes as a parameter just the name of the list and returns its length.

All parts have very useful properties you can access, they are all listed in [this page](PartModifierScriptProperties).
        </Footer>
    <Overrides>
      <activationGroup type="int">
The activation group assigned to the inputcontroller. When this is disabled, the inputcontroller will not update it's input.
           </activationGroup>
      <currentValue type="float">
This is used in-game, when saving the game's state.
           </currentValue>
      <designerInputOptions type="string">
This is the comma separated list of available inputs in the part properties panel. This is overriden by the "Show Hidden Properties" checkbox in the Tinker panel.
           </designerInputOptions>
      <ignorePartActivationState type="bool">
If set to true, then the input controller will function even when the part is not activated. This is required for auto-activating parts.
           </ignorePartActivationState>
      <input type="string">
The input axis to use. More details below.
           </input>
      <inputAxisRangeDesigner type="string">
The designer field for the `inputAxisRange` property.
           </inputAxisRangeDesigner>
      <invert type="bool">
Invert the value?
           </invert>
      <invertOnMirror type="bool">
Invert when the part is mirrored?
           </invertOnMirror>
      <invertType type="string">
If `Output`, then the value will be inverted after mapping. If `Axis`, it will be before mapping.
           </invertType>
      <max type="float">
The maximum output value
           </max>
      <min type="float">
The minimum output value
           </min>
      <overrideInput type="string">
If assigned, this will override the `input` field.
           </overrideInput>
      <showActivationGroup type="bool">
Controls if the activation group spinner is shown in the designer.
           </showActivationGroup>
      <showInputAxis type="bool">
Controls if the input axis spinner is shown in the desinger.
           </showInputAxis>
      <showInvert type="bool">
Controls if the invert checkbox is shown in the deisgner.
           </showInvert>
      <type type="string">
This is the method used to map the input to the output range. See the `InputControllerType` table.
           </type>
      <zeroOnDeactivate type="bool">
If false, the value will remain frozen when deactivated. If true it will go to zero.
           </zeroOnDeactivate>
      <inputAxisRange type="string">
One, two or three numbers, comma separated. They define the range of the input values that are expected when mapping to output values. Can either be `max`, `min,max` or `min,zero,max`.
        </inputAxisRange>
      <outputCurveAmplitude />
      <outputCurveFrequency />
      <outputCurveKeyframes />
      <outputCurveLabel />
      <outputCurveOffset />
      <outputCurveStyle />
      <outputCurveWrapMode />
    </Overrides>
    <Customs>
      <inputId type="string">
Define what input the InputController is trying to override. See the `inputId` table.
           </inputId>
    </Customs>
  </InputController>
  <CargoBay>
    <Overrides>
      <open />
      <openAngle />
      <openSpeed />
      <startOpen />
      <soundVolume />
      <hasBase />
      <hingeStyle />
      <secondaryDoorAngle />
    </Overrides>
  </CargoBay>
  <CommandPod>
    <Overrides>
      <activationGroupNames />
      <activationGroupStates />
      <currentStage />
      <editActivationGroups />
      <headingDirectionRotation />
      <primaryButton />
      <craftConfigType />
      <pilotSeatRotation />
      <reorientCraftOnConfigChange />
      <autoPilotMaxPitchPid />
      <autoPilotMaxRollPid />
      <autoPilotPitchDerivative />
      <autoPilotPitchIntegral />
      <autoPilotPitchPidLabel />
      <autoPilotPitchProportional />
      <autoPilotRollDerivative />
      <autoPilotRollIntegral />
      <autoPilotRollPidLabel />
      <autoPilotRollProportional />
      <descriptionLabel />
      <pidPitch />
      <pidRoll />
      <autoRecalculateStages />
      <craftConfigAutoAssign />
      <replicateActivationGroups />
      <replicateControls />
      <replicateStageActivations />
      <useDefaultPilotSeatRotation />
      <stageCalculationVersion />
      <powerConsumption />
      <configurableContents />
      <configureBattery />
      <configureGyros />
    </Overrides>
  </CommandPod>
  <Detacher>
    <Overrides>
      <force />
      <targetAttachPoints />
      <detachOnActivated />
      <scale />
      <attachPointIndex />
      <version />
    </Overrides>
  </Detacher>
  <DockingPort>
    <Overrides>
      <magnetForce />
      <scale />
    </Overrides>
  </DockingPort>
  <ElectricMotor>
    <Overrides>
      <attachPointIndex />
      <brakeTorque />
      <powerUsagePerTorque />
      <rpm />
      <soundVolume />
      <staticResistance />
      <torque />
      <version />
      <scale />
      <throttleGovernorEnabled />
    </Overrides>
  </ElectricMotor>
  <Fairing>
    <Overrides>
      <fairingBase />
      <jettisoned />
      <jettisonSpin />
      <jettisonVelocity />
    </Overrides>
  </Fairing>
  <FuelSource>
    <Overrides>
      <autoIdentifyFuelTanks />
      <fuelTankPartIds />
      <fuelType />
      <totalCapacity />
      <totalFuel />
      <autoUpdateFuelTanks />
      <requiresFuelLine />
    </Overrides>
  </FuelSource>
  <FuelTank>
    <Overrides>
      <capacity />
      <designerFuelType />
      <fuel />
      <fuelType />
      <autoFuelType />
      <fuelTypeDescription />
      <fuelTypeReadOnly />
      <priority />
      <subPriority />
      <utilization />
    </Overrides>
  </FuelTank>
  <CoverEngine>
    <Overrides>
      <coverEngine />
    </Overrides>
  </CoverEngine>
  <Gyroscope>
    <Overrides>
      <electricalConsumption />
      <power />
      <powerScale />
      <mass />
      <spoolupRatio />
      <utilization />
      <maxAcceleration />
    </Overrides>
  </Gyroscope>
  <InputBasedActivator>
    <Overrides>
      <activationType />
      <currentState />
      <rangeEnd />
      <rangeStart />
      <target />
      <updateMethod />
    </Overrides>
  </InputBasedActivator>
  <JointRotator>
    <Overrides>
      <allowFreeSpin />
      <attachPointIndex />
      <baseMode />
      <currentAngle />
      <damperMultiplier />
      <maxRange />
      <maxSpeed />
      <minRange />
      <range />
      <soundVolume />
      <speed />
      <angle />
      <version />
      <editMessage />
      <scale />
      <consumptionMultiplier />
    </Overrides>
  </JointRotator>
  <LandingLeg>
    <Overrides>
      <currentExtensionPosition />
      <currentRotation />
      <deployedAngle />
      <deployedExtensionY />
      <deploySpeed />
      <scale />
      <startDeployed />
      <baseScale />
      <extensionPercentage />
      <landingLegType />
      <massHeight />
      <massRadius />
      <soundVolume />
      <footPivot />
      <footPivotAvailable />
    </Overrides>
  </LandingLeg>
  <Light>
    <Overrides>
      <color />
      <intensity />
      <lightType />
      <mask />
      <offsetX />
      <offsetY />
      <offsetZ />
      <partGlow />
      <range />
      <rotationX />
      <rotationY />
      <rotationZ />
      <spotLightAngle />
      <partGlowSelfShadowCasting />
    </Overrides>
  </Light>
  <Parachute>
    <Overrides>
      <size />
      <baseSize />
      <autocutDensity />
      <chuteHeight />
      <chuteRadius />
      <chuteRadiusDeflated />
      <cordLength />
      <deploymentDensity />
      <inflationDensity />
      <maxDeploymentSpeed />
      <referenceDensity />
      <aslBased />
      <autocutASL />
      <deploymentASL />
      <inflationASL />
      <snapThresholdMultiplier />
    </Overrides>
  </Parachute>
  <Piston>
    <Overrides>
      <currentPosition />
      <cycle />
      <editMessage />
      <extend />
      <preventBreaking />
      <range />
      <scale />
      <speed />
      <consumptionMultiplier />
    </Overrides>
  </Piston>
  <ReactionControlNozzle>
    <Overrides>
      <fuelConsumptionRate />
      <power />
      <powerScale />
      <multiDirection />
      <scale />
      <manualInput />
    </Overrides>
  </ReactionControlNozzle>
  <RelayFuelSource>
    <Overrides />
  </RelayFuelSource>
  <ResizableWheel>
    <Overrides>
      <brakeTorque />
      <damper />
      <direction />
      <enableSuspension />
      <gearRatio />
      <maxAngularVelocity />
      <maxRpm />
      <size />
      <slipForwardAsymptote />
      <slipForwardExtremum />
      <slipSidewaysAsymptote />
      <slipSidewaysExtremum />
      <spring />
      <torque />
      <tractionForward />
      <tractionSideways />
      <turningAngle />
      <turningRate />
      <width />
      <version />
      <directionReverse />
      <soundVolume />
    </Overrides>
  </ResizableWheel>
  <Suspension>
    <Overrides>
      <damper />
      <preventBreaking />
      <size />
      <spring />
      <thickness />
    </Overrides>
  </Suspension>
  <TestPilot>
    <Overrides>
      <anchorFeet />
    </Overrides>
  </TestPilot>
  <Wing>
    <Overrides>
      <airfoil />
      <allowControlSurfaces />
      <angleOfAttack />
      <density />
      <fuelPercentage />
      <hingeDistanceFromTrailingEdge />
      <inverted />
      <minSectionLength />
      <rootLeadingOffset />
      <rootTrailingOffset />
      <tipLeadingOffset />
      <tipPosition />
      <tipTrailingOffset />
      <wingPhysicsEnabled />
      <invertAirfoil />
      <craftSide />
      <version />
      <controlSurfacePriceMultiplier />
      <maxFuelCapacity />
      <thickness />
      <wingStrengthOverride />
      <allowAirfoilSelection />
      <densityOverride />
      <autoResize />
      <cDragOverride />
      <cLiftOverride />
      <curveLength />
      <isFancy />
      <isStylish />
      <thicknessDelta />
      <thicknessDeltaStyle />
      <thicknessOffset />
      <thicknessOffsetStyle />
      <thicknessTip />
      <thicknessTipAuto />
      <leadingBulge />
      <leadingBulgeStyle />
    </Overrides>
  </Wing>
  <ControlSurface>
    <Overrides>
      <autoInvert />
      <deflectionSpeed />
      <end />
      <input />
      <invert />
      <maxDeflectionDegree />
      <start />
      <designerAutoAxesInfo />
      <singleAxisWhenAuto />
      <invertOnMirror />
    </Overrides>
  </ControlSurface>
  <SolarPanelArray>
    <Overrides>
      <deploySpeed />
      <efficiency />
      <mainOpenPercentage />
      <open />
      <openingSideDepth />
      <rows />
      <rowSize />
      <scale />
      <sideOpenPercentage />
      <startOpen />
      <folds />
      <hideBase />
      <length />
      <rotateSpeed />
      <invert />
      <invertOnMirror />
      <juicyBase />
      <rowSizeOverride />
    </Overrides>
  </SolarPanelArray>
  <SolarPanel>
    <Overrides>
      <efficiency />
      <length />
      <width />
    </Overrides>
  </SolarPanel>
  <Engine>
    <Overrides>
      <electricalConsumption />
      <fuelConsumption />
      <fuelConsumptionScale />
      <gimbalRange />
      <maxGimbalAngle />
      <maxTorque />
      <seaLevelEfficiency />
      <supportsWarpBurn />
      <thrust />
      <vacuumEfficiency />
      <fuelType />
      <scale />
      <version />
      <exhaustColorInner />
      <exhaustColorOutter />
    </Overrides>
  </Engine>
  <Inlet>
    <Overrides />
  </Inlet>
  <JetEngine>
    <Overrides>
      <afterburnerThrottleStart />
      <bypassRatio />
      <compressionRatio />
      <designerPerformanceAltitude />
      <designerPerformanceHeader />
      <designerPerformanceIsp />
      <designerPerformanceMach />
      <designerPerformanceMaxThrust />
      <hasAfterburner />
      <shroudCurvature />
      <shroudLength />
      <size />
      <propulsionLabButton />
      <mass />
      <price />
      <hasReverseThrust />
    </Overrides>
  </JetEngine>
  <Fuselage>
    <Overrides>
      <autoResize />
      <bottomScale />
      <buoyancy />
      <cornerRadiuses />
      <deadWeight />
      <fuelPercentage />
      <meshType />
      <normalSmoothingAngle />
      <offset />
      <subpartIndex />
      <toolAutoAdaptBottom />
      <toolAutoAdaptTop />
      <toolIgnore />
      <toolResizeBottom />
      <toolResizeHeight />
      <toolResizeRadius />
      <toolResizeTop />
      <toolShapeBottom />
      <toolShapeTop />
      <toolSupportsAddSection />
      <topScale />
      <flattenNormals />
      <supportsXZOffset />
      <meshMassMultiplier />
      <clampDistances />
      <deadWeightPercentage />
      <deformations />
      <depthCurve />
      <meshPriceMultiplier />
      <depthCurved />
      <volume />
      <volumeInner />
      <wallThickness />
    </Overrides>
  </Fuselage>
  <Config>
    <Overrides>
      <buoyancyBaseScale />
      <buoyancyUserScale />
      <centerOfMass />
      <collisionDisconnectImpulse />
      <collisionDisconnectVelocity />
      <collisionExplodeImpulse />
      <collisionExplodeVelocity />
      <collisionVelocityMode />
      <descriptionLabel />
      <dragScale />
      <fuelLine />
      <heatShield />
      <includeInDrag />
      <inertiaTensorBaseScale />
      <inertiaTensorMin />
      <inertiaTensorUserScale />
      <massScale />
      <maxDamage />
      <maxTemperature />
      <partCollisionHandling />
      <partCollisionResponse />
      <partIdLabel />
      <partScale />
      <partScaleMagnitude />
      <raiseWaterEventsEvenIfNotBuoyant />
      <showHiddenPartProperties />
      <stageActivationType />
      <supportsActivation />
      <thermalMassRatio />
      <tinkerPanelEnabled />
      <autoActivateIfNoStageOrActivationGroup />
      <addFlightProgramButton />
      <changeCommandPod />
      <collisionPreventExternalDisconnections />
      <preventDebris />
      <viewCommandPod />
      <occlusion />
      <renderQueue />
      <supportsTransparency />
      <dragScaleActive />
      <maxDrag />
      <maxDragActive />
      <castShadows />
      <xmlEditButton />
      <contractId />
      <explosiveness />
      <heatShieldBaseScale />
      <heatShieldMass />
      <heatShieldScale />
      <partSelectionEnabled />
      <payloadId />
      <payloadTrackingId />
      <priceScale />
      <heatShieldValidation />
      <ignoreValidation />
      <initialCraftNodeId />
      <tutorialId />
      <dragScaleAngular />
      <tinkerPanelUpgradeLabel />
    </Overrides>
  </Config>
  <RocketEngine>
    <Overrides>
      <chamberPressure />
      <engineSubTypeId />
      <engineTypeId />
      <exhaustScale />
      <fuelTypeId />
      <gimbalRange />
      <nozzleSize />
      <nozzleThroatSize />
      <nozzleTypeId />
      <propulsionLabButton />
      <size />
      <mass />
      <price />
      <supportsWarpBurn />
      <fuelType />
      <thrustOverride />
      <massFlowRateOverride />
      <wattsPerFuelFlowOverride />
      <minThrottleOverride />
      <throttleResponse />
      <overexpansionDamage />
      <hasSmoke />
      <exhaustColor />
      <exhaustOffset />
      <exhaustWhiteIntensity />
      <engineSoundOverride />
      <heatTransferOverride />
      <directDamage />
      <smokeSpeedOverride />
      <smokeColor />
      <fuelGrain />
      <exhaustExpansionRange />
      <exhaustGlobalIntensity />
      <exhaustShockIntensity />
      <exhaustShockDirectionOffset />
      <exhaustRimShade />
      <exhaustSootIntensity />
      <exhaustSootLength />
      <exhaustColorTip />
      <exhaustColorShock />
      <exhaustColorFlame />
      <exhaustColorSoot />
      <smokeOffset />
      <exhaustTextureStrength />
      <nozzleDiscStrength />
    </Overrides>
  </RocketEngine>
  <CrossFeed>
    <Overrides>
      <attachPointA />
      <attachPointB />
      <mode />
    </Overrides>
  </CrossFeed>
  <LandingGear>
    <Overrides>
      <bayLength />
      <brakeTorque />
      <damperScale />
      <extensionPercent />
      <flipped />
      <forwardOffset />
      <gearRatio />
      <heightOffset />
      <lengthScale />
      <maxTurningAngle />
      <retractionSpeed />
      <showUpperBraces />
      <sideOffset />
      <size />
      <slantAngle />
      <springForceScale />
      <startExtended />
      <supportArmEnabled />
      <suspensionTravel />
      <torque />
      <tractionForward />
      <tractionSideways />
      <verticalAngleOffset />
      <extended />
      <version />
      <soundVolume />
      <bayWidth />
    </Overrides>
  </LandingGear>
  <CameraVantage>
    <Overrides>
      <lookAtCommandPod />
      <padPosition />
      <autoCenterCamera />
      <cameraOffset />
      <enabledByDefault />
      <isHidden />
      <manualRegister />
      <fieldOfView />
      <fieldOfViewMax />
      <fieldOfViewMin />
      <variableZoom />
      <version />
      <scale />
      <hideBase />
      <isNight />
      <nightVisionColor />
      <cameraRotationOffset />
      <dirtIntensity />
    </Overrides>
  </CameraVantage>
  <BeaconLight>
    <Overrides>
      <blinkFrequency />
      <blinkOffset />
      <blinkStyle />
      <hideBase />
      <intensity />
      <powerConsumptionScale />
      <scale />
    </Overrides>
  </BeaconLight>
  <LightPart>
    <Overrides>
      <extension />
      <hideBase />
      <powerConsumptionScale />
      <range />
      <rotation />
      <spotLightAngle />
      <intensity />
      <scale />
    </Overrides>
  </LightPart>
  <CurveInput>
    <Overrides>
      <amplitude />
      <frequency />
      <ignorePartActivationState />
      <keyframes />
      <offset />
      <style />
      <updateInWarp />
      <useUnscaledTime />
      <wrapMode />
    </Overrides>
  </CurveInput>
  <FlightProgram>
    <Overrides>
      <editFlightProgramButton />
      <maxCallStackSize />
      <maxInstructionsPerFrame />
      <maxThreads />
      <outputToDevConsole />
      <timeSinceLaunch />
      <powerConsumptionPerInstruction />
      <broadcastPowerConsumptionPerByte />
    </Overrides>
  </FlightProgram>
  <EvaChair>
    <Overrides>
      <armTargets />
      <legTargets />
      <topHeader />
      <bottomHeader />
      <leftHandTarget />
      <rightHandTarget />
      <leftHandBend />
      <rightHandBend />
      <leftFootTarget />
      <rightFootTarget />
      <leftFootBend />
      <rightFootBend />
      <forwardLook />
      <snapRange />
    </Overrides>
  </EvaChair>
  <CrewCompartment>
    <Overrides>
      <capacity />
      <capacityLabel />
      <commandPodEnabledInCompartment />
      <crewExitPosition />
      <crewExitRotation />
      <visibleInCompartment />
      <maxPressure />
      <minPressure />
      <volumePerIndividual />
    </Overrides>
  </CrewCompartment>
  <Eva>
    <Overrides>
      <crewName />
      <grapplingHookEnabled />
      <jetpackEnabled />
      <jetpackPowerScalar />
      <jumpPowerScalar />
      <primaryButton />
      <randomizeName />
      <separator />
      <crewButton />
      <crewId />
      <jetpackAvailable />
      <requiresCrewMember />
      <gDamageScale />
      <gTolerance />
    </Overrides>
  </Eva>
  <Cockpit>
    <Overrides />
  </Cockpit>
  <Decal>
    <Overrides>
      <materialB />
      <materialG />
      <materialR />
      <materialSourceColor />
      <offsetX />
      <offsetY />
      <path />
      <tilingX />
      <tilingY />
      <useSourceColor />
    </Overrides>
  </Decal>
  <Gauge>
    <Overrides>
      <faceType />
      <faceZero />
      <flipFace />
      <hideFace />
      <hideIndicator />
      <indicatorLength />
      <indicatorOffset />
      <indicatorType />
      <indicatorZero />
      <multiplier />
      <rotationType />
      <scale />
    </Overrides>
  </Gauge>
  <KomodoNoseCone>
    <Overrides>
      <autoResize />
      <defaultRadius />
      <scale />
    </Overrides>
  </KomodoNoseCone>
  <Label>
    <Overrides>
      <designText />
      <fontSize />
      <height />
      <horizontalAlignment />
      <verticalAlignment />
      <width />
      <curvatureAngle />
      <fontName />
      <gradient />
      <outlineWidth />
      <curvatureDirection />
      <offset />
      <paintIndexShift />
      <parentPath />
      <rotation />
      <supportsCurvature />
      <supportsGradient />
    </Overrides>
  </Label>
  <ScalablePod>
    <Overrides>
      <baseScale />
      <engineBurnTime />
      <engineEnabled />
      <engineIsp />
      <enginePrice />
      <height />
      <radiusBottom />
      <radiusPercent />
      <radiusTop />
      <unscaledCenterOfMass />
      <heightStretch />
      <requiredAreaPerAstronaut />
      <mass />
    </Overrides>
  </ScalablePod>
  <SubPartRotator>
    <Overrides>
      <adjustableRate />
      <currentEnabledPercent />
      <designerIconEnabledPercent />
      <disabledRotation />
      <enabledRotation />
      <rotationRate />
      <rotationSpeed />
      <startEnabled />
      <startEnabledLabel />
      <subPartPath />
      <syncActivationGroup />
      <angleLerp />
      <positionOffset />
      <selfGoverned />
    </Overrides>
  </SubPartRotator>
  <Mfd>
    <Overrides>
      <height />
      <maxTextureSize />
      <maxWidgets />
      <mfdProgram />
      <resolution />
      <width />
      <wattsperm2 />
    </Overrides>
  </Mfd>
  <GaugeBase>
    <Overrides>
      <hideBase />
      <hideRim />
      <scale />
      <trimType />
    </Overrides>
  </GaugeBase>
  <LandingLegSuspension>
    <Overrides>
      <damper />
      <maxSuspensionDistance />
      <maxSuspensionScale />
      <minSuspensionDistance />
      <spring />
      <suspensionCompression />
      <suspensionDistance />
      <suspensionType />
      <targetCompression />
    </Overrides>
  </LandingLegSuspension>
  <Generator>
    <Overrides>
      <baseFuelFlow />
      <baseMass />
      <consumptionOverride />
      <costPerWatt />
      <efficiency />
      <fuelConsumptionScale />
      <fuelSourceAttachPoint />
      <fuelType />
      <generationOverride />
      <hideBase />
      <scale />
      <stretch />
      <soundVolume />
      <baseScale />
    </Overrides>
  </Generator>
  <Package>
    <Overrides>
      <mass />
    </Overrides>
  </Package>
  <Payload>
    <Overrides>
      <contractId />
      <payloadId />
      <payloadTrackingId />
      <contractNumber />
      <contractNumberString />
      <disconnectedWarning />
      <payloadCount />
      <setCraftTrackingIdOnActive />
      <setCraftNameOnActive />
    </Overrides>
  </Payload>
  <ElectricMotorOld>
    <Overrides>
      <attachPointIndex />
      <brakeTorque />
      <powerUsagePerTorque />
      <rpm />
      <soundVolume />
      <staticResistance />
      <torque />
      <scale />
    </Overrides>
  </ElectricMotorOld>
  <GenericPart>
    <Overrides>
      <attachmentSize />
      <baseMass />
      <basePrize />
      <massSizeRate />
      <priceSizeRate />
      <scale />
    </Overrides>
  </GenericPart>
  <PropellerAssembly>
    <Overrides>
      <basePrice />
      <bladeBlurCount />
      <bladeBlurSpread />
      <bladeCount />
      <chordRadiusRatio />
      <chordScale />
      <defaultDiameter />
      <density />
      <dragScalar />
      <hubScale />
      <isWaterProp />
      <maxPitch />
      <pitchControlType />
      <reverseBladeDirection />
      <size />
      <spinTolerance />
      <styleId />
      <styleIdHub />
      <syncWithMotor />
      <thrustScalar />
    </Overrides>
  </PropellerAssembly>
</Sr2XmlDocManifest>